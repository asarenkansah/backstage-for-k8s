name: CI
on:
  push:
  pull_request:

jobs:
  build:
    name: Build & Push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Run install
        uses: borales/actions-yarn@v4
        with:
          cmd: install
      
      - name: Run tsc
        uses: borales/actions-yarn@v4
        with:
          cmd: tsc

      - name: Build Backend
        uses: borales/actions-yarn@v4
        with:
          cmd: build:backend
      
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: salaboy
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: './'
          file: ./packages/backend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/backstage:latest
            ghcr.io/${{ github.repository_owner }}/backstage:${{ github.event.client_payload.version }}
          labels: |
            org.opencontainers.image.description=Docker image generated from the latest Backstage release; this contains what you would get out of the box by running npx @backstage/create-app and building a Docker image from the generated source. This is meant to ease the process of evaluating Backstage for the first time, but also has the severe limitation that there is no way to install additional plugins relevant to your infrastructure.
